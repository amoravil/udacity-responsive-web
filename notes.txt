_________________________________
My projects:
_________________________________

* home-town:  
Este proyecto consiste en volver responsive una pagina web. 
- Incluye cambio en el ancho de las secciones (width:100%)
- uso de patrones, media query y breakpoints

* examples-with-patterns. 
- Algunos ejemplos simples de uso de most-fluid pattern and 
  Hamburger menu.

___________________________
Using Dev Tools On Mobile
___________________________

* Chrome Canary (http://www.google.com/intl/en/chrome/browser/canary.html)
* On Linux, the Chromium Dev channel (http://www.chromium.org/getting-involved/dev-channel) is similar to Canary.
* Learn about Remote Debugging on Android with Chrome (https://developer.chrome.com/devtools/docs/remote-debugging)

___________________________

* chrome://inspect/
* https://www.browserstack.com/: test with different browsers in the cloud
* https://developers.google.com/web/fundamentals/
* https://developers.google.com/web/tools/chrome-devtools/shortcuts

____________________________
TOOLS FOR RESPONSIVE WEBSIDES

1. Media query
2. flexbox

Patterns:
3. Column Drop (changes width)
4. Mostly fluid (3 + changes left/right margin)
5. Layout shifter (4 + changes order and nested containers)
6. Off Canvas (use hidden elements (off screen) like hamburger menu)
___________________________
PIXEL, DIPS AND DPR, CCS PIXELS
____________________________
A pixel is not always a pixel. 
Example: Hardware (physical) pixels could be 1160px and Device independent pixels (dips) could be 800px. dips: Take up the same amount of space on a display regardless of the pixel density of the display.

Tech specs of mobiles always refer to the number of hardware pixels. No dpis.
Device pixel ratio is how many hardware pixels for every dips.


___________________________
VIEWPORT
___________________________

If you don’t define of meta viewport, browser try to figure out how scale in a pixel radio and try to make the content look better adjust its font size (font-boosting).

If we have differences between the way 2 devices show the font size could be because viewport is not set of because they have diferent pixel ratio.
CCS PIXELS: divide the number of hardware pixels by the DPR.

A typical mobile-optimized site contains something like the following:

	<meta name="viewport" content="width=device-width, initial-scale=1">

The width property controls the size of the viewport. It can be set to a specific number of pixels like width=600 or to the special value device-width value which is the width of the screen in CSS pixels at a scale of 100%. (There are corresponding height and device-height values, which may be useful for pages with elements that change size or position based on the viewport height.)
The initial-scale property controls the zoom level when the page is first loaded. The maximum-scale, minimum-scale, and user-scalable properties control how users are allowed to zoom the page in or out.

	https://developer.mozilla.org/en-US/docs/Mozilla/Mobile/Viewport_meta_tag


___________________________
Trick
___________________________

* CCS allows overflow elements bigger than their conteiner. Then use Max-Width: 

	Img, embed, object, video {
	   max-width: 100%;
	} 
* smaller devices can be as low as 320 pixels.

* Start developing for small device. Then move to bigger one.

___________________________
TOUCH SCREEN
___________________________

Fingers: 10mm width 40 ccs pixels. Then Buttons: 48x48 pixels (width x height) to have space for enough room.

	nav, a, button {
		min-width: 48px;
		min-height: 48px;
	}

	or add padding, which means that the padding is equivalent to 1.5 times the font size. Example:
	
	a {
		padding: 1.5em;
	}

___________________________
Media Query. 
___________________________

Break point: The point at which the page change layout. Tip: Design it according to the content, no to the devices.

Example:
	@media screen and (min-width: 0px) and (max-width: 400px) {
		body { background-color: red}
	}

Not use max-device-width.
Not use import css

___________________________
Flexbox
___________________________

display: flex
flex-wrap: wrap
order attribute in css helps to define the order.

___________________________
Fonts
___________________________

Ideal Measure of the length of a line of text:  45-90 cpl (characters per line)
Consensus about  <<<<<< 65 cpl >>>>>>> on web

Fonts read enough for read:  
* font-size: 16px 
* line height: 1.2em

Use minor brackpoints to small changes: margins, paddings, font sizes, tamaño del icono. and displaly atributte inline-block

